{"ast":null,"code":"var _jsxFileName = \"/home/tunein/Documents/frontend/SENG2021_Project/react_flask/src/pages/invoiceUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './wrapper.css';\nimport axios from 'axios';\nimport './wrapper.css';\nimport PropTypes from 'prop-types';\nimport Credentials from '../Credentials';\nimport { Box, Button, Container, TextField, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadInvoice() {\n  _s();\n\n  const [selectedFile, setSelectedFile] = React.useState();\n  const [report, setReport] = React.useState();\n  const token = React.useContext(Credentials);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setSelectedFile(event.target[0].files[0]);\n    const file = selectedFile;\n    const report_type = event.target[2].value;\n    if (!file || !report_type) return;\n    const formData = new FormData();\n    formData.append('token', token.replace(/['\"]+/g, ''));\n    formData.append('file', file);\n    formData.append('report_type', report_type);\n    axios({\n      method: \"post\",\n      url: `/invoice/upload/API`,\n      data: formData,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(response => {\n      console.log(JSON.parse(JSON.stringify(response.data)));\n      setReport(JSON.stringify(response.data));\n      /*  Don't know how to pass query string for now like invoice:id kind of format. \n          Will implement if learnt later\n          For now it is only json format.\n      */\n      // const report_id = response.data['report_id'];\n      // const queryString = '?token=';\n      // queryString.concat(token);\n      // queryString.concat('&report_id');\n      // queryString.concat(report_id);\n      // props.history.push({\n      //   pathname: '/reports/read',\n      //   search: queryString,\n      //   state: { report_type }\n      // });\n      // const data = response.data;\n    }).catch(error => {\n      console.error('Error, error');\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      boxShadow: 1,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h2\",\n        children: \"Upload Invoice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"file\",\n          name: \"file\",\n          type: \"file\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"report_type\",\n          name: \"Report Type\",\n          label: \"Report Type\",\n          type: \"text\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"report\",\n          children: report ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: report\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 47\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadInvoice, \"M/mfyGOhm/0jxh3R8oELqZyHZz0=\");\n\n_c = UploadInvoice;\nexport default UploadInvoice; // UploadInvoice.propTypes = {\n//   setSelectedFile: PropTypes.func.isRequired\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadInvoice\");","map":{"version":3,"sources":["/home/tunein/Documents/frontend/SENG2021_Project/react_flask/src/pages/invoiceUpload.js"],"names":["React","useState","axios","PropTypes","Credentials","Box","Button","Container","TextField","Typography","UploadInvoice","selectedFile","setSelectedFile","report","setReport","token","useContext","handleSubmit","event","preventDefault","target","files","file","report_type","value","formData","FormData","append","replace","method","url","data","headers","then","response","console","log","JSON","parse","stringify","catch","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './wrapper.css';\nimport axios from 'axios';\nimport './wrapper.css';\nimport PropTypes from 'prop-types';\n\nimport Credentials from '../Credentials';\nimport {\n  Box,\n  Button,\n  Container,\n  TextField,\n  Typography,\n} from '@material-ui/core';\n\nfunction UploadInvoice() {\n  const [selectedFile, setSelectedFile] = React.useState();  \n  const [report, setReport] = React.useState();\n\n  const token = React.useContext(Credentials);\n  \n  function handleSubmit(event) {\n    event.preventDefault();\n\n    setSelectedFile(event.target[0].files[0]);\n    const file = selectedFile;\n    const report_type = event.target[2].value;\n    if (!file || !report_type) return;\n\n    const formData = new FormData();\n\n    formData.append('token', token.replace(/['\"]+/g, ''));\n    formData.append('file', file);\n    formData.append('report_type', report_type);\n    \n    axios({\n      method: \"post\",\n      url: `/invoice/upload/API`,\n      data: formData,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n      .then((response) => {\n        console.log(JSON.parse(JSON.stringify(response.data)));\n        setReport(JSON.stringify(response.data));\n        /*  Don't know how to pass query string for now like invoice:id kind of format. \n            Will implement if learnt later\n            For now it is only json format.\n        */ \n        \n        // const report_id = response.data['report_id'];\n        // const queryString = '?token=';\n        // queryString.concat(token);\n        // queryString.concat('&report_id');\n        // queryString.concat(report_id);\n        // props.history.push({\n        //   pathname: '/reports/read',\n        //   search: queryString,\n        //   state: { report_type }\n        // });\n  \n        // const data = response.data;\n      })\n      .catch((error) => { console.error('Error, error') });\n    }\n\n  return(\n    <Container component=\"main\" maxWidth=\"lg\">\n      <Box boxShadow={1}>\n        <Typography component=\"h1\" variant=\"h2\">\n          Upload Invoice\n        </Typography>\n        {\n          <form onSubmit={handleSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"file\"\n              name=\"file\"\n              type=\"file\"\n              autoFocus \n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"report_type\"\n              name=\"Report Type\"\n              label=\"Report Type\"\n              type=\"text\"\n              autoFocus \n            />\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n            Submit\n            </Button>\n            <div className=\"report\">{report ? <p>{report}</p> : null}</div>\n          </form>\n\n            \n        }\n      </Box>\n    </Container>\n  );\n}\n\nexport default UploadInvoice;\n// UploadInvoice.propTypes = {\n//   setSelectedFile: PropTypes.func.isRequired\n// }\n"]},"metadata":{},"sourceType":"module"}